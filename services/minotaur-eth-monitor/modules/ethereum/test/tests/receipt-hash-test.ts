require('source-map-support').install()
import { encodeReceipts, hashHexReceipts } from '../../src'

const assert = require('assert')

describe('receipt hashing', () => {

  it('can hash a simple receipt', async function () {
    const receipt = {
      blockHash: '0x768666f13a3dde3276745cc2f670398fb77a15f98bbaa42bd2f53b8007563b53',
      blockNumber: '0x9',
      contractAddress: null,
      cumulativeGasUsed: '0x5208',
      from: '0x0b7ffe7140d55b39f200557ef0f9ec1dd2e8f1ba',
      gasUsed: '0x5208',
      logs: [],
      logsBloom: '0x
      root: '0x6592791674c4b30525ba8d09f6eb3d1a3c9b234e75051591147b1f7449cff8e0',
      to: '0x84e0d6169459d50808364f4dc35c7615d363c14d',
      transactionHash: '0xd585fd57b81e516cc72955a148793bce1e85b01944589272c7f6c3d0017095a1',
      transactionIndex: '0x0'
    }

    const inputData = await encodeReceipts([receipt])
    const inputDataHex = inputData[0].toString('hex')
    const expected = 'f90128a06592791674c4b30525ba8d09f6eb3d1a3c9b234e75051591147b1f7449cff8e0825208bc0'
    assert.strictEqual(inputDataHex, expected)
  })

  it('can hash a receipt with logs', async function () {
    const receipt = {
      blockHash: '0xa40c620525c02977c9abd29bae422c54ae7bd5b33e96934a9463d616906e1b58',
      blockNumber: '0x3a649a',
      contractAddress: null,
      cumulativeGasUsed: '0x6c44',
      from: '0xcf40d0d2b44f2b66e07cace1372ca42b73cf21a3',
      gasUsed: '0x6c44',
      logs: [
        {
          address: '0x888666ca69e0f178ded6d75b5726cee99a87d698',
          topics: [
            '0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef',
            '0x000000000000000000000000e8ee7d0f82376b2d9307a7a50e1eb9b98944e3c0',
            '0x000000000000000000000000cf40d0d2b44f2b66e07cace1372ca42b73cf21a3'
          ],
          data: '0x00000000000000000000000000000000000000000000000ac9ae05a71ebc0000',
          blockNumber: '0x3a649a',
          transactionHash: '0x326b12ba6645e0edcacba5eaa8805bb867f6df3df328e4df7caa8a2834d4a644',
          transactionIndex: '0x0',
          blockHash: '0xa40c620525c02977c9abd29bae422c54ae7bd5b33e96934a9463d616906e1b58',
          logIndex: '0x0',
          removed: false
        },
        {
          address: '0xe8ee7d0f82376b2d9307a7a50e1eb9b98944e3c0',
          topics: [
            '0xd0ed88a3f042c6bbb1e3ea406079b5f2b4b198afccaa535d837f4c63abbc4de6',
            '0x000000000000000000000000888666ca69e0f178ded6d75b5726cee99a87d698',
            '0x000000000000000000000000cf40d0d2b44f2b66e07cace1372ca42b73cf21a3'
          ],
          data: '0x00000000000000000000000000000000000000000000000ac9ae05a71ebc0000',
          blockNumber: '0x3a649a',
          transactionHash: '0x326b12ba6645e0edcacba5eaa8805bb867f6df3df328e4df7caa8a2834d4a644',
          transactionIndex: '0x0',
          blockHash: '0xa40c620525c02977c9abd29bae422c54ae7bd5b33e96934a9463d616906e1b58',
          logIndex: '0x1',
          removed: false
        }
      ],
      logsBloom: '0x
      root: '0x7e3db25804ec8921be3a47a6e6f1278dfc6f4e25d8f25fc822b1af457549ef88',
      to: '0xe8ee7d0f82376b2d9307a7a50e1eb9b98944e3c0',
      transactionHash: '0x326b12ba6645e0edcacba5eaa8805bb867f6df3df328e4df7caa8a2834d4a644',
      transactionIndex: '0x0'
    }

    const hash = await hashHexReceipts([receipt])
    assert.strictEqual(hash, '0x908152304ef0f7776015bb0072cf5079233db47623db1c7c42a47d8320c774c6')
  })

  it('can hash receipts from a geth test', async function () {
    const receipts = [
      {
        status: '0x1',
        cumulativeGasUsed: '0x5208',
        logsBloom: '0x
        logs: null,
        transactionHash: '0xc35b743377ea701d92402f6e35f243cae6a75142215e1f3e7f5ce80ed82785f1',
        contractAddress: '0x0000000000000000000000000000000000000000',
        gasUsed: '0x5208'
      },
      {
        status: '0x1',
        cumulativeGasUsed: '0xa410',
        logsBloom: '0x
        logs: null,
        transactionHash: '0x7a8b3b82f694d600e5c44114e4a547d3c40d4bc45c2a9fe24768a8e517aaaad4',
        contractAddress: '0x0000000000000000000000000000000000000000',
        gasUsed: '0x5208'
      },
      {
        status: '0x1',
        cumulativeGasUsed: '0xf618',
        logsBloom: '0x
        logs: null,
        transactionHash: '0xfd49318093bb6a1171026889c29c1ac9eec75ab4d1b6e3bd74918958b69f360c',
        contractAddress: '0x0000000000000000000000000000000000000000',
        gasUsed: '0x5208'
      }
    ]

    const hash = await hashHexReceipts(receipts)
    assert.strictEqual(hash, '0x251f2cb798e965c5d9b11c882f37c69fd2c42b314fabe64d2b4998c76eb93ae8')
  })
})