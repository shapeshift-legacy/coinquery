AWSTemplateFormatVersion: 2010-09-09
Description: Bastion Server Stack
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: Network Configuration
        Parameters:
          - VPCID
          - RemoteAccessCIDR
      - Label:
          default: Amazon EC2 Configuration
        Parameters:
          - KeyPairName
          - BastionAMIOS
          - BastionInstanceType
      - Label:
          default: Linux Bastion Configuration
        Parameters:
          - NumBastionHosts
          - BastionTenancy
          - EnableBanner
          - BastionBanner
          - EnableTCPForwarding
          - EnableX11Forwarding
      - Label:
          default: AWS Quick Start Configuration
        Parameters:
          - QSS3BucketName
          - QSS3KeyPrefix
    ParameterLabels:
      BastionAMIOS:
        default: Bastion AMI Operating System
      BastionTenancy:
        default: Bastion Tenancy
      BastionBanner:
        default: Bastion Banner
      BastionInstanceType:
        default: Bastion Instance Type
      EnableBanner:
        default: Enable Banner
      EnableTCPForwarding:
        default: Enable TCP Forwarding
      EnableX11Forwarding:
        default: Enable X11 Forwarding
      KeyPairName:
        default: Key Pair Name
      NumBastionHosts:
        default: Number of Bastion Hosts
      QSS3BucketName:
        default: Quick Start S3 Bucket Name
      QSS3KeyPrefix:
        default: Quick Start S3 Key Prefix
      RemoteAccessCIDR:
        default: Allowed Bastion External Access CIDR
      VPCID:
        default: VPC ID
Parameters:
  NetworkStack:
    Type: String
    Default: coinquery-network
    Description: The CloudFormation stack exporting our desired VPC and networking
      configuration.
  RemoteAccessCIDR:
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/x
    Default: '0.0.0.0/0'
    Description: Allowed CIDR block for external SSH access to the bastions
    Type: String
  BastionAMIOS:
    AllowedValues:
      - Amazon-Linux-HVM
      - CentOS-7-HVM
      - Ubuntu-Server-14.04-LTS-HVM
      - Ubuntu-Server-16.04-LTS-HVM
    Default: Amazon-Linux-HVM
    Description: The Linux distribution for the AMI to be used for the bastion instances
    Type: String
  BastionBanner:
    Default: >-
      https://aws-quickstart.s3.amazonaws.com/quickstart-linux-bastion/scripts/banner_message.txt
    Description: Banner text to display upon login
    Type: String
  BastionTenancy:
    Description: 'VPC Tenancy to launch the bastion in. Options: ''dedicated'' or ''default'''
    Type: String
    Default: default
    AllowedValues:
      - dedicated
      - default
  BastionInstanceType:
    Default: t2.micro
    Description: Amazon EC2 instance type for the bastion instances
    Type: String
  EnableBanner:
    Default: 'false'
    Description: >-
      To include a banner to be displayed when connecting via SSH to the
      bastion, set this parameter to true
    Type: String
  EnableTCPForwarding:
    Type: String
    Description: Enable/Disable TCP Forwarding
    Default: 'false'
  EnableX11Forwarding:
    Type: String
    Description: Enable/Disable X11 Forwarding
    Default: 'false'
  NumBastionHosts:
    Default: '2'
    Description: Enter the number of bastion hosts to create
    Type: String
  QSS3BucketName:
    AllowedPattern: '^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$'
    ConstraintDescription: >-
      Quick Start bucket name can include numbers, lowercase letters, uppercase
      letters, and hyphens (-). It cannot start or end with a hyphen (-).
    Default: aws-quickstart
    Description: >-
      S3 bucket name for the Quick Start assets. Quick Start bucket name can
      include numbers, lowercase letters, uppercase letters, and hyphens (-). It
      cannot start or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: '^[0-9a-zA-Z-/]*$'
    ConstraintDescription: >-
      Quick Start key prefix can include numbers, lowercase letters, uppercase
      letters, hyphens (-), and forward slash (/).
    Default: quickstart-linux-bastion/
    Description: >-
      S3 key prefix for the Quick Start assets. Quick Start key prefix can
      include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    Type: String
  RemoteAccessCIDR:
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/x
    Default: '0.0.0.0/0'
    Description: Allowed CIDR block for external SSH access to the bastions
    Type: String
  AlternativeInitializationScript:
    AllowedPattern: ^http.*|^$
    ConstraintDescription: URL must begin with http
    Description: specify an additional initialization script to run during setup
    Default: ''
    Type: String
  OSImageOverride:
    Description: Specify a region specific image to use for the instance
    Type: String
    Default: ''
  ScriptBucket:
    Type: String
    Description: userdata script bucket name
  ScriptKey:
    Type: String
    Description: userdata script bucket's key name
Mappings:
  AWSAMIRegionMap:
    AMI:
      AMZNLINUXHVM: amzn-ami-hvm-2018.03.0.20180622-x86_64-gp2
      CENTOS7HVM: >-
        CentOS Linux 7 x86_64 HVM EBS ENA
        1805_01-<redacted>-ami-<redacted>.4
      US1404HVM: ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20180722
      US1604HVM: ubuntu/images/hvm-ssd/ubuntu-xenial-16.04-amd64-server-20180806
    ap-northeast-1:
      AMZNLINUXHVM: ami-<redacted>
      CENTOS7HVM: ami-<redacted>
      US1404HVM: ami-<redacted>
      US1604HVM: ami-<redacted>
    ap-northeast-2:
      AMZNLINUXHVM: ami-<redacted>
      CENTOS7HVM: ami-<redacted>
      US1404HVM: ami-<redacted>
      US1604HVM: ami-<redacted>
    ap-south-1:
      AMZNLINUXHVM: ami-<redacted>
      CENTOS7HVM: ami-<redacted>
      US1404HVM: ami-<redacted>
      US1604HVM: ami-<redacted>
    ap-southeast-1:
      AMZNLINUXHVM: ami-<redacted>
      CENTOS7HVM: ami-<redacted>
      US1404HVM: ami-<redacted>
      US1604HVM: ami-<redacted>
    ap-southeast-2:
      AMZNLINUXHVM: ami-<redacted>
      CENTOS7HVM: ami-<redacted>
      US1404HVM: ami-<redacted>
      US1604HVM: ami-<redacted>
    ca-central-1:
      AMZNLINUXHVM: ami-<redacted>
      CENTOS7HVM: ami-<redacted>
      US1404HVM: ami-<redacted>
      US1604HVM: ami-<redacted>
    eu-central-1:
      AMZNLINUXHVM: ami-<redacted>
      CENTOS7HVM: ami-<redacted>
      US1404HVM: ami-<redacted>
      US1604HVM: ami-<redacted>
    eu-west-1:
      AMZNLINUXHVM: ami-<redacted>
      CENTOS7HVM: ami-<redacted>
      US1404HVM: ami-<redacted>
      US1604HVM: ami-<redacted>
    eu-west-2:
      AMZNLINUXHVM: ami-<redacted>
      CENTOS7HVM: ami-<redacted>
      US1404HVM: ami-<redacted>
      US1604HVM: ami-<redacted>
    eu-west-3:
      AMZNLINUXHVM: ami-<redacted>
      CENTOS7HVM: ami-<redacted>
      US1404HVM: ami-<redacted>
      US1604HVM: ami-<redacted>
    sa-east-1:
      AMZNLINUXHVM: ami-<redacted>
      CENTOS7HVM: ami-<redacted>
      US1404HVM: ami-<redacted>
      US1604HVM: ami-<redacted>
    us-east-1:
      AMZNLINUXHVM: ami-<redacted>
      CENTOS7HVM: ami-<redacted>
      US1404HVM: ami-<redacted>
      US1604HVM: ami-<redacted>
    us-east-2:
      AMZNLINUXHVM: ami-<redacted>
      CENTOS7HVM: ami-<redacted>
      US1404HVM: ami-<redacted>
      US1604HVM: ami-<redacted>
    us-west-1:
      AMZNLINUXHVM: ami-<redacted>
      CENTOS7HVM: ami-<redacted>
      US1404HVM: ami-<redacted>
      US1604HVM: ami-<redacted>
    us-west-2:
      AMZNLINUXHVM: ami-<redacted>
      CENTOS7HVM: ami-<redacted>
      US1404HVM: ami-<redacted>
      US1604HVM: ami-<redacted>
  LinuxAMINameMap:
    Amazon-Linux-HVM:
      Code: AMZNLINUXHVM
    CentOS-7-HVM:
      Code: CENTOS7HVM
    Ubuntu-Server-14.04-LTS-HVM:
      Code: US1404HVM
    Ubuntu-Server-16.04-LTS-HVM:
      Code: US1604HVM
Conditions:
  2BastionCondition: !Or 
    - !Equals 
      - !Ref NumBastionHosts
      - '2'
    - !Condition 3BastionCondition
    - !Condition 4BastionCondition
  3BastionCondition: !Or 
    - !Equals 
      - !Ref NumBastionHosts
      - '3'
    - !Condition 4BastionCondition
  4BastionCondition: !Equals 
    - !Ref NumBastionHosts
    - '4'
  GovCloudCondition: !Equals 
    - !Ref 'AWS::Region'
    - us-gov-west-1
  UseAlternativeInitialization: !Not 
    - !Equals 
      - !Ref AlternativeInitializationScript
      - ''
  UseOSImageOverride: !Not 
    - !Equals 
      - !Ref OSImageOverride
      - ''
Resources:
  BastionSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enables SSH Access to Bastion Hosts
      VpcId: !ImportValue
        Fn::Sub: ${NetworkStack}-VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref RemoteAccessCIDR
        - IpProtocol: icmp
          FromPort: '-1'
          ToPort: '-1'
          CidrIp: !Ref RemoteAccessCIDR
  BastionMainLogGroup:
    Type: 'AWS::Logs::LogGroup'
  SSHMetricFilter:
    Type: 'AWS::Logs::MetricFilter'
    Properties:
      LogGroupName: !Ref BastionMainLogGroup
      FilterPattern: ON FROM USER PWD
      MetricTransformations:
        - MetricName: SSHCommandCount
          MetricValue: 1
          MetricNamespace: !Join 
            - /
            - - AWSQuickStart
              - !Ref 'AWS::StackName'
  BastionHostRole:
    Type: 'AWS::IAM::Role'
    Properties:
      Policies:
        - PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - s3:*
                Resource: !Sub 
                  - '*'
                  - Partition: !If 
                      - GovCloudCondition
                      - aws-us-gov
                      - aws
                Effect: Allow
          PolicyName: aws-quick-start-s3-policy
        - PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - 'logs:CreateLogStream'
                  - 'logs:GetLogEvents'
                  - 'logs:PutLogEvents'
                  - 'logs:DescribeLogGroups'
                  - 'logs:DescribeLogStreams'
                  - 'logs:PutRetentionPolicy'
                  - 'logs:PutMetricFilter'
                  - 'logs:CreateLogGroup'
                Resource: !Sub 
                  - >-
                    arn:${Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:${BastionMainLogGroup}:*
                  - Partition: !If 
                      - GovCloudCondition
                      - aws-us-gov
                      - aws
                Effect: Allow
          PolicyName: bastion-cloudwatch-logs-policy
        - PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - 'ec2:AssociateAddress'
                  - 'ec2:DescribeAddresses'
                Resource:
                  - '*'
                Effect: Allow
          PolicyName: bastion-eip-policy
      Path: /
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Principal:
              Service:
                - ec2.amazonaws.com
            Effect: Allow
        Version: 2012-10-17
  BastionHostProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Roles:
        - !Ref BastionHostRole
      Path: /
  EIP1:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
  EIP2:
    Type: 'AWS::EC2::EIP'
    Condition: 2BastionCondition
    Properties:
      Domain: vpc
  EIP3:
    Type: 'AWS::EC2::EIP'
    Condition: 3BastionCondition
    Properties:
      Domain: vpc
  EIP4:
    Type: 'AWS::EC2::EIP'
    Condition: 4BastionCondition
    Properties:
      Domain: vpc
  BastionAutoScalingGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      LaunchConfigurationName: !Ref BastionLaunchConfiguration
      VPCZoneIdentifier:
        - !ImportValue
          Fn::Sub: ${NetworkStack}-Subnet0
        - !ImportValue
          Fn::Sub: ${NetworkStack}-Subnet1
      MinSize: !Ref NumBastionHosts
      MaxSize: !Ref NumBastionHosts
      Cooldown: '300'
      DesiredCapacity: !Ref NumBastionHosts
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}'
          PropagateAtLaunch: 'true'
    CreationPolicy:
      ResourceSignal:
        Count: !Ref NumBastionHosts
        Timeout: PT30M
  BastionLaunchConfiguration:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Metadata:
      'AWS::CloudFormation::Authentication':
        S3AccessCreds:
          type: S3
          roleName: !Ref BastionHostRole
          buckets:
            - !Ref QSS3BucketName
      'AWS::CloudFormation::Init':
        config:
          files:
            /tmp/bastion_bootstrap.sh:
              source: !If 
                - UseAlternativeInitialization
                - !Ref AlternativeInitializationScript
                - !Sub 
                  - >-
                    https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/bastion_bootstrap.sh
                  - QSS3Region: !If 
                      - GovCloudCondition
                      - s3-us-gov-west-1
                      - s3
              mode: '000550'
              owner: root
              group: root
              authentication: S3AccessCreds
          commands:
            b-bootstrap:
              command: !Join 
                - ''
                - - ./tmp/bastion_bootstrap.sh
                  - ' --banner '
                  - !Ref BastionBanner
                  - ' --enable '
                  - !Ref EnableBanner
                  - ' --tcp-forwarding '
                  - !Ref EnableTCPForwarding
                  - ' --x11-forwarding '
                  - !Ref EnableX11Forwarding
    Properties:
      AssociatePublicIpAddress: 'true'
      PlacementTenancy: !Ref BastionTenancy
      IamInstanceProfile: !Ref BastionHostProfile
      ImageId: !If 
        - UseOSImageOverride
        - !Ref OSImageOverride
        - !FindInMap 
          - AWSAMIRegionMap
          - !Ref 'AWS::Region'
          - !FindInMap 
            - LinuxAMINameMap
            - !Ref BastionAMIOS
            - Code
      SecurityGroups:
        - !Ref 'BastionSecurityGroup'
      InstanceType: !Ref BastionInstanceType
      UserData: !Base64 
        'Fn::Join':
          - ''
          - - |
              #!/bin/bash
            - |
              set -x
            - |
              export PATH=$PATH:/usr/local/bin
            - |
              which pip &> /dev/null
            - |
              if [ $? -ne 0 ] ; then
            - |2
                  echo "PIP NOT INSTALLED"
            - |2
                  [ `which yum` ] && $(yum install -y epel-release; yum install -y python-pip) && echo "PIP INSTALLED"
            - |2
                  [ `which apt-get` ] && apt-get -y update && apt-get -y install python-pip && echo "PIP INSTALLED"
            - |
              fi
            - |
              pip install --upgrade pip &> /dev/null
            - |
              pip install awscli --ignore-installed six &> /dev/null
            - >
              easy_install
              https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz
            - EIP_LIST="
            - !Ref EIP1
            - ','
            - !If 
              - 2BastionCondition
              - !Ref EIP2
              - 'Null'
            - ','
            - !If 
              - 3BastionCondition
              - !Ref EIP3
              - 'Null'
            - ','
            - !If 
              - 4BastionCondition
              - !Ref EIP4
              - 'Null'
            - |
              "
            - CLOUDWATCHGROUP=
            - !Ref BastionMainLogGroup
            - |+
            
            - 'cfn-init -v --stack '
            - !Ref 'AWS::StackName'
            - ' --resource BastionLaunchConfiguration --region '
            - !Ref 'AWS::Region'
            - |+
            
            - 'cfn-signal -e $? --stack '
            - !Ref 'AWS::StackName'
            - ' --resource BastionAutoScalingGroup --region '
            - !Ref 'AWS::Region'
            - |+

            - 'aws s3 cp s3://'
            - !Ref 'ScriptBucket'
            - '/'
            - !Ref 'ScriptKey'
            - " localUserData.sh\n"
            - 'bash localUserData.sh'
            
Outputs:
  BastionSecurityGroupID:
    Description: Bastion Security Group ID
    Value: !Ref BastionSecurityGroup
    Export:
      Name: !Sub '${AWS::StackName}-BastionSecurityGroupID'
  BastionAutoScalingGroup:
    Description: Auto Scaling Group Reference ID
    Value: !Ref BastionAutoScalingGroup
    Export:
      Name: !Sub '${AWS::StackName}-BastionAutoScalingGroup'
  EIP1:
    Description: Elastic IP 1 for Bastion
    Value: !Ref EIP1
    Export:
      Name: !Sub '${AWS::StackName}-EIP1'
  EIP2:
    Condition: 2BastionCondition
    Description: Elastic IP 2 for Bastion
    Value: !Ref EIP2
    Export:
      Name: !Sub '${AWS::StackName}-EIP2'
  CloudWatchLogs:
    Description: CloudWatch Logs GroupName. Your SSH logs will be stored here.
    Value: !Ref BastionMainLogGroup
    Export:
      Name: !Sub '${AWS::StackName}-CloudWatchLogs'