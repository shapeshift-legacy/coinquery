package main

//+build ignore

import (
	"log"
	"os"
	"text/template"
	"time"

	"../coin"
)

func main() {

	now := time.Now()
	unix := now.Format(time.UnixDate)

	deployDotSh, osErr := os.Create("../deploy-sample.sh")
	if osErr != nil {
		log.Panic(osErr)
	}
	defer deployDotSh.Close()

	// update deploy.sh
	deploySampleDotSh.Execute(deployDotSh, struct {
		Coins     []string
		Timestamp string
	}{
		Coins:     coin.Coins,
		Timestamp: unix,
	})
}

var deploySampleDotSh = template.Must(template.New("deploy-sample-dot-sh").Parse(`#!/bin/bash
### Code (re)generated by go generate; DO NOT EDIT BY HAND;
### ------------------------------------------------------;
### {{ .Timestamp }}
######################## MAKEFILE PARAMETERS #######################
AWS_ACCESS_KEY_ID= # can delete if you have aws.config setup
AWS_SECRET_ACCESS_KEY= # can delete if you have aws.config setup
REGION= # example) us-east-1 
ECS_REPO_URI= # example) <redacted>.dkr.ecr.us-east-1.amazonaws.com
REGION_SSL= # example) arn:aws:acm:us-east-1:<redacted>:certificate/<redacted>
STACK_COUNT= # example) 9 (any integer will work)
IS_PROD=false
####################################################################
{{range .Coins}}
{{.}}(){
    AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \ # Remove this if you use aws.config
    AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \ # Remove this if you use aws.config
    make {{.}}-init REGION=$REGION ECS_REPO_URI=$ECS_REPO_URI REGION_SSL=$REGION_SSL STACK_COUNT=$STACK_COUNT IS_PROD=$IS_PROD
}
{{end}}
case "$1" in
{{range .Coins}}
    ({{.}})
     {{.}}
    exit 0
    ;;
{{end}}
  (*)
    echo "Please use deploy.sh <BCH | ETH | ETHPARITY | ZEC | LTC | BTC | BTG | DASH>"
    exit 0
    ;;
esac`))
